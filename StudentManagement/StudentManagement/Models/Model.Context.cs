//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentManagement.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StudentManagementEntities : DbContext
    {
        public StudentManagementEntities()
            : base("name=StudentManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AbsentCalendar> AbsentCalendars { get; set; }
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<ComponentScore> ComponentScores { get; set; }
        public virtual DbSet<CourseRegister> CourseRegisters { get; set; }
        public virtual DbSet<DatabaseImageTable> DatabaseImageTables { get; set; }
        public virtual DbSet<DetailScore> DetailScores { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<Examination> Examinations { get; set; }
        public virtual DbSet<Faculty> Faculties { get; set; }
        public virtual DbSet<Faculty_TrainingForm> Faculty_TrainingForm { get; set; }
        public virtual DbSet<Folder> Folders { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<NotificationComment> NotificationComments { get; set; }
        public virtual DbSet<NotificationImage> NotificationImages { get; set; }
        public virtual DbSet<NotificationInfo> NotificationInfoes { get; set; }
        public virtual DbSet<NotificationType> NotificationTypes { get; set; }
        public virtual DbSet<OTP> OTPs { get; set; }
        public virtual DbSet<Semester> Semesters { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<SubjectClass> SubjectClasses { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }
        public virtual DbSet<TrainingForm> TrainingForms { get; set; }
        public virtual DbSet<TrainingScore> TrainingScores { get; set; }
        public virtual DbSet<User_UserRole_UserInfo> User_UserRole_UserInfo { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<UserRole_UserInfo> UserRole_UserInfo { get; set; }
        public virtual DbSet<UserRole_UserInfoItem> UserRole_UserInfoItem { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int USP_InsertUserWithRole(string role, string faculty)
        {
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var facultyParameter = faculty != null ?
                new ObjectParameter("Faculty", faculty) :
                new ObjectParameter("Faculty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_InsertUserWithRole", roleParameter, facultyParameter);
        }
    }
}
