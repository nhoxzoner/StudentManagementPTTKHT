<UserControl
    x:Class="StudentManagement.Components.ForgotPassword"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:StudentManagement.Components"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:utils="clr-namespace:StudentManagement.Utils"
    d:DataContext="{StaticResource LoginVM}"
    d:DesignHeight="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}, Converter={utils:RatioConverter}, ConverterParameter='0.64'}"
    d:DesignWidth="{Binding Source={x:Static SystemParameters.PrimaryScreenWidth}, Converter={utils:RatioConverter}, ConverterParameter='0.28'}"
    Background="Transparent"
    FontSize="16"
    mc:Ignorable="d">
    <Border Background="White" CornerRadius="10">
        <Border.Effect>
            <DropShadowEffect
                BlurRadius="8"
                Opacity="0.6"
                ShadowDepth="0"
                Color="Gray" />
        </Border.Effect>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="20,10">
                <Button
                    HorizontalAlignment="Left"
                    Command="{Binding SwitchView}"
                    Style="{StaticResource MaterialDesignIconForegroundButton}">
                    <materialDesign:PackIcon Kind="ChevronLeft" />
                </Button>

                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="24"
                    FontWeight="SemiBold"
                    Text="ĐẶT LẠI MẬT KHẨU" />
            </Grid>

            <TextBox
                Grid.Row="1"
                Margin="28,16"
                VerticalContentAlignment="Center"
                materialDesign:HintAssist.Background="White"
                materialDesign:HintAssist.Hint="Email"
                materialDesign:HintAssist.HintOpacity="0.5"
                materialDesign:ShadowAssist.ShadowDepth="Depth2"
                materialDesign:TextFieldAssist.HasClearButton="True"
                materialDesign:TextFieldAssist.HasLeadingIcon="True"
                materialDesign:TextFieldAssist.LeadingIcon="Account"
                materialDesign:TextFieldAssist.TextFieldCornerRadius="20"
                materialDesign:ValidationAssist.Background="White"
                FontSize="16"
                Text="{Binding Gmail, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignOutlinedTextBox}" TargetType="TextBox">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource MaterialDesignValidationErrorBrush}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <Grid Grid.Row="2" Margin="28,16">
                <TextBox
                    x:Name="txbOTP"
                    VerticalContentAlignment="Center"
                    materialDesign:HintAssist.Background="White"
                    materialDesign:HintAssist.Hint="Nhập mã OTP"
                    materialDesign:HintAssist.HintOpacity="0.5"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    materialDesign:TextFieldAssist.HasLeadingIcon="True"
                    materialDesign:TextFieldAssist.LeadingIcon="ShieldKey"
                    materialDesign:TextFieldAssist.TextFieldCornerRadius="20"
                    materialDesign:ValidationAssist.Background="White"
                    MaxLength="6"
                    FontSize="16"
                    Text="{Binding OTPInView, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignOutlinedTextBox}" TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource MaterialDesignValidationErrorBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button
                    Width="Auto"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Command="{Binding GetOTPCodeCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <TextBlock
                                Margin="0,0,16,0"
                                VerticalAlignment="Center"
                                FontSize="16">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="Lấy mã" />
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryMain}" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsGetCode}" Value="True" />
                                                    <Condition Binding="{Binding TimeCountDown, Converter={utils:IsNullConverter}}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Text" Value="{Binding TimeCountDown}" />
                                                <Setter Property="Foreground" Value="{DynamicResource DarkGray}" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsGetCode}" Value="True" />
                                                    <Condition Binding="{Binding TimeCountDown, Converter={utils:IsNullConverter}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Text" Value="Gửi lại mã" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsGetCode}" Value="True" />
                                        <Condition Binding="{Binding TimeCountDown, Converter={utils:IsNullConverter}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

            </Grid>

            <PasswordBox
                Grid.Row="3"
                Height="{Binding Path=ActualHeight, ElementName=txbOTP}"
                Margin="28,16"
                VerticalContentAlignment="Center"
                local:PasswordBoxHelper.Password="{Binding NewPassWord, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                materialDesign:HintAssist.Hint="Mật khẩu mới"
                materialDesign:HintAssist.HintOpacity="0.5"
                materialDesign:ShadowAssist.ShadowDepth="Depth2"
                materialDesign:TextFieldAssist.HasClearButton="True"
                materialDesign:TextFieldAssist.HasLeadingIcon="True"
                materialDesign:TextFieldAssist.HasTrailingIcon="True"
                materialDesign:TextFieldAssist.LeadingIcon="Lock"
                materialDesign:TextFieldAssist.TextFieldCornerRadius="20"
                materialDesign:TextFieldAssist.TrailingIcon="Eye"
                materialDesign:ValidationAssist.Background="White"
                FontSize="16">
                <PasswordBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignOutlinedPasswordBoxCustom}" TargetType="PasswordBox">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource MaterialDesignValidationErrorBrush}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </PasswordBox.Style>
            </PasswordBox>

            <PasswordBox
                Grid.Row="4"
                Height="{Binding Path=ActualHeight, ElementName=txbOTP}"
                Margin="28,16"
                VerticalContentAlignment="Center"
                local:PasswordBoxHelper.Password="{Binding ReNewPassWord, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                materialDesign:HintAssist.Hint="Nhập lại mật khẩu"
                materialDesign:HintAssist.HintOpacity="0.5"
                materialDesign:ShadowAssist.ShadowDepth="Depth2"
                materialDesign:TextFieldAssist.HasClearButton="True"
                materialDesign:TextFieldAssist.HasLeadingIcon="True"
                materialDesign:TextFieldAssist.HasTrailingIcon="True"
                materialDesign:TextFieldAssist.LeadingIcon="Lock"
                materialDesign:TextFieldAssist.TextFieldCornerRadius="20"
                materialDesign:TextFieldAssist.TrailingIcon="Eye"
                materialDesign:ValidationAssist.Background="White"
                FontSize="16">
                <PasswordBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignOutlinedPasswordBoxCustom}" TargetType="PasswordBox">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource MaterialDesignValidationErrorBrush}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </PasswordBox.Style>
            </PasswordBox>

            <DockPanel Grid.Row="5" Margin="28,4">
                <TextBlock
                    HorizontalAlignment="Right"
                    DockPanel.Dock="Right"
                    FontWeight="SemiBold"
                    Text="Bạn không nhận được mã OTP?">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{StaticResource ErrorMain}" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand" />
                                    <Setter Property="Foreground" Value="{StaticResource ErrorLight}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </DockPanel>

            <Button
                Grid.Row="6"
                Width="120"
                Height="40"
                Margin="28,16"
                materialDesign:ButtonAssist.CornerRadius="20"
                Content="Xác nhận"
                FontSize="16"
                IsEnabled="{Binding CanLogin}"
                Command="{Binding ConFirmCommand}"
                Style="{StaticResource PrimaryButton}" />
        </Grid>
    </Border>
</UserControl>
